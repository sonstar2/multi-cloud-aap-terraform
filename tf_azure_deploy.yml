---
- name: Deploy Azure instance using terraform
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - cloud.terraform

  vars:
    project_dir: '/tmp/deployment'

  tasks:
    - name: Grab instance info
      ansible.builtin.git:
       repo: https://github.com/sonstar2/multi-cloud-aap-terraform.git
       dest: '{{ project_dir }}'

    - name: Set Password Variable
      set_fact:
        ansible_admin_pass: "{{ ansible_password }}"
      no_log: true

    - name: Deploy terraform userdata file
      ansible.builtin.template:
        src: terraform/terraform-azure/windows_userdata.ps1
        dest: '{{ project_dir }}/terraform/terraform-azure/windows_userdata.ps1'

    - name: Deploy terraform variable file
      ansible.builtin.template:
        src: terraform/terraform-azure/main.tf
        dest: '{{ project_dir }}/terraform/terraform-azure/main.tf'

    # - name: Debug backend_config_files
    #   set_fact: 
    #     backend_file: "{{ lookup('ansible.builtin.env', 'TF_BACKEND_CONFIG_FILE') }}"

    - name: Deploy with force init
      cloud.terraform.terraform:
        project_path: '{{ project_dir }}/terraform/terraform-azure'
        state: present
        force_init: true
      environment:
        ARM_SUBSCRIPTION_ID: "{{ lookup('ansible.builtin.env', 'AZURE_SUBSCRIPTION_ID') }}"
        ARM_TENANT_ID: "{{ lookup('ansible.builtin.env', 'AZURE_TENANT') }}"
        ARM_CLIENT_ID: "{{ lookup('ansible.builtin.env', 'AZURE_CLIENT_ID') }}"
        ARM_CLIENT_SECRET: "{{ lookup('ansible.builtin.env', 'AZURE_SECRET') }}"
      check_mode: "{{ bool_terraform_plan_mode }}"
      register: terraform_output

    - name: Debug terraform_output
      debug:
        msg: "{{ terraform_output }}"
        
    - name: Set Stats Terraform plan/apply
      ansible.builtin.set_stats:
        data:
          azure_tf_plan: "{{ terraform_output.stdout }}"
          azure_vm_name: "{{ terraform_output.outputs.host_name.value }}"
        per_host: false
